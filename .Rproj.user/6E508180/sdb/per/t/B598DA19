{
    "contents" : "\n# This is the server logic for a Shiny web application.\n# You can find out more about building applications with Shiny here:\n#\n# http://shiny.rstudio.com\n#\n\nlibrary(shiny)\n\nshinyServer(function(input, output) {\n  \n  get_sim <- function(error){\n    \n    Sa50 <- round(input$t0 - log(1-(input$S50/input$linf))/input$vbk)\n    Ma50 <- round(input$t0 - log(1-(input$M50/input$linf))/input$vbk)\n    \n    S_a <- 1/(1+exp(Sa50 - 0:input$AgeMax))\n    Mat_a <- 1/(1+exp(Ma50 - 0:input$AgeMax))\n    L_a <- input$linf*(1-exp(-input$vbk*(0:input$AgeMax - input$t0)))\n    W_a <- input$lwa * L_a ^ input$lwb\n    binwidth <- 1\n    mids <- seq((binwidth/2), input$linf*1.2, by=binwidth)\n    highs <- mids + (binwidth/2)\n    lows <- mids - (binwidth/2)\n    ages <- c(0:input$AgeMax)\n    \n    if(error==TRUE){\n      SigmaR <- 0.6\n      SigmaF <- 0.3\n    }\n    if(error==FALSE){\n      SigmaR <- SigmaF <- 0\n    }\n    \n    set.seed(1234)\n    simdata <- SimData(Nyears=input$nyears, AgeMax=input$AgeMax, \n                       SigmaR=SigmaR, M=input$M, F1=0.01, S_a=S_a, \n                       SigmaF=SigmaF, W_a=W_a, L_a=L_a, Mat_a=Mat_a, \n                       Amat=Ma50, Fdynamics=input$f_options, \n                       Rdynamics=input$rec_options, Fequil=0.2, R0=1000,\n                       CVlen=0.2, highs=highs, mids=mids, lows=lows)\n\n    \n    return(simdata)\n    \n  }\n\n  output$MLplot <- renderPlot({\n    pop <- get_sim(error=FALSE)\n    L_t <- get_sim(error=FALSE)$L_t\n    rL_t <- L_t/L_t[1]\n    if(input$error==TRUE){\n      L_t2 <- get_sim(error=TRUE)$L_t\n      rL_t2 <- L_t2/L_t2[1]\n    }\n    years <- 1:input$nyears\n    plot(years, rL_t, lwd=4, pch=19, type=\"o\", ylim=c(0, max(rL_t)*1.5),\n         ylab=\"Observed mean length in catch\", col=gray(0.2), xlab=\"Year\", yaxt=\"n\")\n    axis(2, at=pretty(c(0, max(rL_t)*1.5)), las=2)\n    if(input$error==TRUE) lines(rL_t2, lty=2, col=gray(0.2), lwd=2)\n  })\n  \n  output$Fplot <- renderPlot({\n    F_t <- get_sim(error=FALSE)$F_t\n    if(input$error==TRUE) F_t2 <- get_sim(error=TRUE)$F_t\n    years <- 1:input$nyears\n    plot(years, F_t, lwd=4, pch=19, type=\"o\", ylim=c(0, 1.5),\n         ylab=\"True fishing mortality\", col=\"forestgreen\", xlab=\"Year\", yaxt=\"n\")\n    axis(2, at=pretty(c(0,1.5)), las=2)\n    if(input$error==TRUE) lines(F_t2, lty=2, col=\"forestgreen\", lwd=2)\n  })\n  \n  output$Rplot <- renderPlot({\n    R_t <- get_sim(error=FALSE)$R_t\n    if(input$error==TRUE) R_t2 <- get_sim(error=TRUE)$R_t\n    years <- 1:input$nyears\n    plot(years, R_t, lwd=4, pch=19, type=\"o\", ylim=c(0, 5000),\n         ylab=\"True recruitment\", col=\"steelblue\", xlab=\"Year\", yaxt=\"n\")\n    axis(2, at=pretty(c(0,5000)), las=2)\n    if(input$error==TRUE) lines(R_t2, lty=2, col=\"steelblue\", lwd=2)\n  })\n  \n  output$LFplot <- renderPlot({\n    VL <- get_sim(error=FALSE)$VL\n    relVL1 <- VL[1,]/max(VL[1,])\n    relVL2 <- VL[round(input$nyears)/2,]/max(VL[round(input$nyears)/2,])\n    \n    plot(x=1, y=1, type=\"n\", xlim=c(0, 90), ylim=c(0, 1), axes=F, xaxs=\"i\", yaxs=\"i\", ann=F)\n    polygon(x=c(seq(0,90,length=length(relVL1)), seq(90, 0, length=length(relVL1))),\n            y=c(rep(0, length(relVL1)), rev(relVL1)), col=\"#AAAAAA70\")\n    polygon(x=c(seq(0,90,length=length(relVL2)), seq(90,0,length=length(relVL2))),\n            y=c(rep(0, length(relVL2)), rev(relVL2)), col=\"#AA000070\")\n    axis(1, at=pretty(c(0,90)))\n    mtext(side=1, \"Length\", line=3)\n    axis(2, at=pretty(c(0,1)), las=2)\n    mtext(side=2, \"Relative proportion\", line=3)\n    \n#     barplot(VL[1,]/max(VL[1,]), col=\"#AAAAAA70\", xlim=c(0,80), ylim=c(0,1))\n#     par(new=TRUE)\n#     barplot(VL[10,]/max(VL[10,]), col=\"#AA000070\", xlim=c(0,80), ylim=c(0,1))\n    \n  })\n\n  output$LFlegend <- renderPlot({\n    \n    plot(x=1, y=1, type=\"n\", axes=F, ann=F, xlim=c(0,10), ylim=c(0,10))\n    legend(\"top\", legend=c(\"Unfished equilibrium\", \"Perturbed\"),\n           col=c(\"#AAAAAA70\", \"#AA000070\"), border=NA, cex=2.2, pch=15)\n    \n  })\n  \n\n\n  \n\n  \n})",
    "created" : 1458678239975.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1086019598",
    "id" : "B598DA19",
    "lastKnownWriteTime" : 1459285596,
    "path" : "C:/Git_Projects/fishing_recruitment_tradeoff/server.R",
    "project_path" : "server.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}